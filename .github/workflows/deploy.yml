# Static Frontend Deployment to WebSupport.sk
# File location: .github/workflows/deploy.yml

name: üöÄ Deploy to WebSupport

# Deploy on push to main branch
on:
  push:
    branches: [ main ]
  workflow_dispatch: # Manual trigger option

jobs:
  deploy:
    name: üì§ Deploy Static Files
    runs-on: ubuntu-latest
    
    steps:
      # Step 1: Get the code
      - name: üì• Checkout Code
        uses: actions/checkout@v4
      
      # Step 2: Show deployment info
      - name: üìã Pre-deployment Check
        run: |
          echo "üóÇÔ∏è Files to deploy:"
          find . -type f \( -name "*.html" -o -name "*.css" -o -name "*.js" -o -name "*.jpg" -o -name "*.png" -o -name "*.gif" -o -name "*.svg" \) | head -15
          echo ""
          echo "üìä Summary:"
          echo "  HTML: $(find . -name "*.html" | wc -l) files"
          echo "  CSS: $(find . -name "*.css" | wc -l) files" 
          echo "  JS: $(find . -name "*.js" | wc -l) files"
          echo "  Target: /palacebar.sk/web/"
      
      # Step 3: Deploy using SFTP (WebSupport recommended secure method)
      - name: üîê Deploy via SFTP (SSH Protocol)
        uses: wlixcc/SFTP-Deploy-Action@v1.2.4
        with:
          # WebSupport SFTP settings
          server: ${{ secrets.FTP_HOST }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          port: 22
          
          # Paths
          local_path: './*'
          remote_path: '/palacebar.sk/web'
          
          # SFTP specific settings
          sftp_only: true
          
          # File handling
          args: '-o ConnectTimeout=5'
      
      # Step 4: Success notification
      - name: ‚úÖ Deployment Successful
        run: |
          echo "üéâ SUCCESS! Website deployed successfully!"
          echo ""
          echo "üåê Your website is live at:"
          echo "   Primary: https://palacebar.sk/"
          echo "   Backup: https://d.r6.wbsprt.com/palacebar.sk"
          echo ""
          echo "üìÑ Available pages:"
          echo "   ‚Ä¢ Homepage: https://palacebar.sk/index.html"
          echo "   ‚Ä¢ Menu: https://palacebar.sk/menu.html" 
          echo "   ‚Ä¢ Admin: https://palacebar.sk/admin-login.html"
          echo "   ‚Ä¢ Orders: https://palacebar.sk/order.html"
          echo ""
          echo "üîß Management tools:"
          echo "   ‚Ä¢ WebFTP: https://webftp.palacebar.sk"
          echo "   ‚Ä¢ Alt WebFTP: https://webftp.r6.websupport.sk"
          echo ""
          echo "üìÖ Deployment Details:"
          echo "   Time: $(date)"
          echo "   Commit: ${{ github.sha }}"
          echo "   Branch: ${{ github.ref_name }}"

  # Fallback job if SFTP fails
  fallback_deploy:
    name: üîÑ Fallback FTP Deploy
    runs-on: ubuntu-latest
    needs: deploy
    if: failure()
    
    steps:
      - name: üì• Checkout Code
        uses: actions/checkout@v4
      
      - name: üöÄ Deploy via FTP-TLS (Encrypted Fallback)
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          # WebSupport FTP-TLS settings (encrypted FTP)
          server: ${{ secrets.FTP_HOST }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          port: 21
          protocol: ftps-legacy
          
          # Paths
          local-dir: './'
          server-dir: '/palacebar.sk/web/'
          
          # Connection settings
          timeout: 60000
          log-level: verbose
          
          # Exclude development files
          exclude: |
            **/.git*
            **/.git*/**
            **/.github/**
            **/node_modules/**
            **/.DS_Store
            **/*.md
            **/README*
            **/LICENSE
            **/.gitignore
            **/.env*
            **/*.log
            **/.vscode/**
            **/.idea/**
            **/Thumbs.db
      
      - name: ‚úÖ Fallback Deployment Complete
        run: |
          echo "‚úÖ Fallback deployment successful!"
          echo "üîó Website: https://palacebar.sk/"
          echo "üìä Method: FTP-TLS (Encrypted)"

  # Notify on complete failure
  notify_failure:
    name: üö® Deployment Failed
    runs-on: ubuntu-latest
    needs: [deploy, fallback_deploy]
    if: always() && (needs.deploy.result == 'failure' && needs.fallback_deploy.result == 'failure')
    
    steps:
      - name: ‚ùå Both Methods Failed
        run: |
          echo "üö® DEPLOYMENT FAILED - Both SFTP and FTP methods failed!"
          echo ""
          echo "üîß Troubleshooting steps:"
          echo "1. Verify FTP credentials in GitHub repository secrets:"
          echo "   ‚Ä¢ FTP_HOST: palacebar.sk"
          echo "   ‚Ä¢ FTP_USERNAME: [check WebSupport admin]"
          echo "   ‚Ä¢ FTP_PASSWORD: [check WebSupport admin]"
          echo "   ‚Ä¢ FTP_PORT: 21"
          echo ""
          echo "2. Test connection manually:"
          echo "   ‚Ä¢ WebFTP: https://webftp.palacebar.sk"
          echo "   ‚Ä¢ Alternative: https://webftp.r6.websupport.sk"
          echo ""
          echo "3. Check WebSupport.sk status and server connectivity"
          echo ""
          echo "üìã Debug Information:"
          echo "   Repository: ${{ github.repository }}"
          echo "   Branch: ${{ github.ref_name }}"
          echo "   Commit: ${{ github.sha }}"
          echo "   Timestamp: $(date)"
